name: Build and Deploy

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm 缓存文件的路径
          path: ~/.npm
          # 这个键会表示缓存的内容
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          # 当package-lock.json文件没有变化时，恢复键会尝试恢复精确匹配的缓存。如果精确匹配的缓存没有找到，它会恢复共享前缀的最新缓存
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Commit and Push
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add build/
          git diff --quiet && git diff --staged --quiet || git commit -m "Automated build commit"
          git push https://${{ secrets.TOKEN_1110 }}:x-oauth-basic@github.com/${{ github.repository }} HEAD:${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_1110 }}

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.TOKEN_1110 }}  # 使用您提供的TOKEN_1110
          publish_dir: ./build  # 确保这是您的构建输出目录
